{"Event": {"date": "2017-02-03", "publish_timestamp": "1486156232", "published": true, "info": "OSINT - Windows SMBv3 Denial of Service Proof of Concept (0 Day Exploit)", "threat_level_id": "3", "timestamp": "1486156219", "extends_uuid": "", "uuid": "5894f12f-709c-4502-a896-7dbf02de0b81", "analysis": "0", "Orgc": {"uuid": "55f6ea5e-2c60-40e5-964f-47a8950d210f", "name": "CIRCL"}, "Tag": [{"colour": "#ffffff", "name": "tlp:white"}], "Attribute": [{"to_ids": false, "deleted": false, "value": "alert tcp $EXTERNAL_NET 445 -> $HOME_NET any  (sid: 10001515; msg: \"SMB Excessive Large Tree Connect Response\"; byte_test: 3,>,1000,1; content: \"|fe 53 4d 42 40 00|\"; offset: 4; depth: 6; content: \"|03 00|\"; offset: 16; depth:2 ;)", "uuid": "5894f14c-b000-4526-88c4-874d02de0b81", "timestamp": "1486156118", "disable_correlation": false, "comment": "Based on this understanding of the exploit (please let me know if I didn't get it right or missed something), I wrote a simple snort signature that looks for Tree Connect messages that exceed 1000 bytes in size. Use this at your own risk. It is in \"works for me\" state:", "category": "Network activity", "type": "snort"}, {"to_ids": false, "deleted": false, "value": "https://github.com/lgandx/PoC/tree/master/SMBv3%20Tree%20Connect", "uuid": "5894f176-4fe8-4611-91d5-46d602de0b81", "timestamp": "1486156165", "disable_correlation": false, "comment": "", "category": "Payload delivery", "type": "link", "Tag": [{"colour": "#360044", "name": "ms-caro-malware:malware-type=\"Exploit\""}]}, {"to_ids": false, "deleted": false, "value": "https://isc.sans.edu/diary/Windows%2BSMBv3%2BDenial%2Bof%2BService%2BProof%2Bof%2BConcept%2B%280%2BDay%2BExploit%29/22029", "uuid": "5894f1a8-fda4-499e-ba27-8cd702de0b81", "timestamp": "1486156219", "disable_correlation": false, "comment": "", "category": "External analysis", "type": "link", "Tag": [{"colour": "#00223b", "name": "osint:source-type=\"blog-post\""}, {"colour": "#075200", "name": "admiralty-scale:source-reliability=\"b\""}]}]}}